<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Sliders and Buttons</title>
</head>
<style>

* {
  box-sizing: border-box;
  margin: 0;
}

section {
  display: grid;
  gap: 2em;
}

body {
  min-block-size: 100%;
  font-family: system-ui, sans-serif;
  background: hsl(210, 34%, 95%);
  display: grid;
  place-content: center;
  gap: 2rem;
}

.animated .accented {
  accent-color: hsl(var(--hue) calc(var(--saturation-light, 80) * 1%) calc(var(--lightness-light, 30) * 1%));
}

.animated [color-scheme="dark"] .accented {
  accent-color: hsl(var(--hue) calc(var(--saturation-dark, 80) * 1%) calc(var(--lightness-dark, 80) * 1%));
}

.accented {
  accent-color: hsl(var(--huey-light) calc(var(--saturation-light, 80) * 1%) calc(var(--lightness-light, 30) * 1%));
}

[color-scheme="dark"] .accented {
  accent-color: hsl(var(--huey-dark) calc(var(--saturation-dark, 80) * 1%) calc(var(--lightness-dark, 80) * 1%));
}


fieldset input {
    --size:2rem;
    block-size:var(--size);
    inline-size: var(--size);
}

label {
    display:flex;
    align-items:center;
    justify-content:flex-end;
    gap:1rem;
}
fieldset {
    border: 1px solid hs1(0 05 50%);
    border-radius: 1rem;
    padding: 1rem;
    display: flex;
    flex-direction:column;
    gap:1rem;
}

fieldset[color-scheme="dark"] {
  background: Canvas;
  color: white;
}

@media (min-width: 480px) {
  body {
    grid-auto-flow: column;
  }
}

[type="range"] {
  min-width: 100px;
}

</style>
<body>

<section>
<fieldset color-scheme="light">
<label type="checkbox" id="default-light" checked>
</label>

label for="accented-light">
accent
<input class="accented" type="checkbox" id="accented-light" checked>
</label>
</fieldset>

<fieldset color-scheme="dark">
<label for="default-dark">
default
<input type="checkbox" id="default-dark" checked>
</label>

  <label for="accented-dark">
    Accent
    <input class="accented" type="checkbox" id="accented-dark" checked>
  </label>
</fieldset>
</section>
<section>
<fieldset color-scheme="light">
  <label for="default-light">
    Default
    <input type="range" id="default-light" checked>
  </label>

    <label for="accented-light">
    Accent
    <input class="accented" type="range" id="accented-light" checked>
  </label>
</fieldset>

<fieldset color-scheme="dark">
  <label for="default-dark">
    Default
    <input type="range" id="default-dark" checked>
  </label>

  <label for="accented-dark">
    Accent
    <input class="accented" type="range" id="accented-dark" checked>
  </label>
</fieldset>
</section>
<section>
<fieldset color-scheme="light">
  <label>
    Default
    <input type="radio" name="default-demo-light" checked>
    <input type="radio" name="default-demo-light">
    <input type="radio" name="default-demo-light">
  </label>

  <label class="accented">
    Accent
    <input type="radio" name="accented-demo-light" checked>
    <input type="radio" name="accented-demo-light">
    <input type="radio" name="accented-demo-light">
  </label>
</fieldset>
<fieldset color-scheme="dark">
  <label>
    Default
    <input type="radio" name="default-demo-dark" checked>
    <input type="radio" name="default-demo-dark">
    <input type="radio" name="default-demo-dark">
  </label>

  <label class="accented">
    Accent
    <input type="radio" name="accented-demo-dark" checked>
    <input type="radio" name="accented-demo-dark">
    <input type="radio" name="accented-demo-dark">
  </label>
</fieldset>
</section>

<script>

import { GUI } from 'https://cdn.skypack.dev/dat.gui'

const CONTROLLER = new GUI({
  width: 320
})

const OPTIONS = {
  '--huey-light': Math.floor(Math.random() * 359),
  '--huey-dark': Math.floor(Math.random() * 359),
  '--saturation-light': 80,
  '--saturation-dark': 80,
  '--lightness-light': 30,
  '--lightness-dark': 80,  
  '--animated': false,
  '--speed': 0.25,
}



const UPDATE = () => {
  for (const key of Object.keys(OPTIONS)) {
    console.info(key)
    document.documentElement.style.setProperty(key, OPTIONS[key])
  }
  
  document.documentElement.style.setProperty('--animated', OPTIONS['--animated'] ? 'running' : 'paused')
  document.body.className = OPTIONS['--animated'] ? 'animated' : ''
}

const LIGHT = CONTROLLER.addFolder('Color (Light)')
LIGHT.add(OPTIONS, '--huey-light', 0, 360, 1)
  .name('Hue')
  .onChange(UPDATE)
LIGHT.add(OPTIONS, '--saturation-light', 0, 100, 1)
  .name('Saturation')
  .onChange(UPDATE)
LIGHT.add(OPTIONS, '--lightness-light', 0, 100, 1)
  .name('Lightness')
  .onChange(UPDATE)

const DARK = CONTROLLER.addFolder('Color (Dark)')
DARK.add(OPTIONS, '--huey-dark', 0, 360, 1)
  .name('Hue')
  .onChange(UPDATE)
DARK.add(OPTIONS, '--saturation-dark', 0, 100, 1)
  .name('Saturation')
  .onChange(UPDATE)
DARK.add(OPTIONS, '--lightness-dark', 0, 100, 1)
  .name('Lightness')
  .onChange(UPDATE)


CONTROLLER.add(OPTIONS, '--animated')
  .name('Animate Hue')
  .onChange(UPDATE)
CONTROLLER.add(OPTIONS, '--speed', 0.1, 10, 0.1)
  .name('Speed (s)')
  .onChange(UPDATE)

UPDATE()

</script>
</body>

</html>